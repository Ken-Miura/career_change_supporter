services:

  # Use postgres/example user/password credentials
  db:
    image: postgres:14.7
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
      # localeを設定したい理由がないので、localeを設定しない (localeをCに設定する)
      # postgresql.org/docs/14/locale.html 23.1.2. Behavior
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - development_network
  
  cache:
    image: redis:7.0.9
    restart: always
    ports:
      - "6379:6379"
    networks:
      - development_network

  db-management-client:
    # データベース操作が可能なWeb UIを提供するimage
    image: dpage/pgadmin4:6.21
    restart: always
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@test.com
      PGADMIN_DEFAULT_PASSWORD: password
    networks:
      - development_network

  smtp:
    # SMTPサーバとしての機能と受け取ったメールを確認するWeb UIを提供するimage
    image: schickling/mailcatcher:latest
    restart: always
    ports:
      - "8083:1080" # Web UIのポート
      - "1025:1025" # APIのポート
    networks:
      - development_network

  storage:
    # AWS s3互換のモックサーバとしての機能と管理用のWeb UIを提供するimage
    image: minio/minio:RELEASE.2023-03-09T23-16-13Z
    container_name: "storage"
    entrypoint: sh -c "
        mkdir -p /data/ccs-identity-images;
        mkdir -p /data/.minio.sys/buckets/ccs-identity-images;
        mkdir -p /data/ccs-career-images;
        mkdir -p /data/.minio.sys/buckets/ccs-career-images;
        minio server /data --console-address ':37135'"
    ports:
      - 8084:37135 # 管理画面のポート
      - 9000:9000 # APIのポート
    environment:
      - MINIO_ROOT_USER=minio # 管理画面のユーザ、APIのアクセスキー
      - MINIO_ROOT_PASSWORD=password # 管理画面のパスワード、APIのシークレット
      - MINIO_DOMAIN=storage
    volumes:
      - minio:/data
    networks:
      development_network:
        aliases:
          - ccs-identity-images.storage
          - ccs-career-images.storage

  # 下記URLを参考にし、開発環境用のopensearchを構成する
  # https://opensearch.org/docs/latest/opensearch/install/docker/#sample-docker-compose-file-for-development
  opensearch:
    build:
      context: ./files_for_compose/opensearch/image_with_plugins
      dockerfile: Dockerfile
    restart: always
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200 # OpenSerachのREST API用ポート
      - 9600:9600 # Performance Analyzer用ポート
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    networks:
      - development_network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.8.0
    restart: always
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    ports:
      - 8085:5601
    networks:
      - development_network

volumes:
  database:
    driver: local
  minio:
    driver: local
  opensearch-data:
    driver: local

networks:
  development_network: