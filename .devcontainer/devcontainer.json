// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/compose.yml.
{
	"name": "career_change_supporter",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../server/compose.yml",
		"compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/compose.yml to the real service name.
	"service": "app",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/compose.yml
	"workspaceFolder": "/home/developer/workspace",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"lldb.executable": "/usr/bin/lldb",
		// VS Code don't watch files under ./target
		"files.watcherExclude": {
			"**/target/**": true
		},
		"rust-analyzer.checkOnSave.command": "clippy"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"vadimcn.vscode-lldb@1.8.1",
		"mutantdino.resourcemonitor@1.0.7",
		"rust-lang.rust-analyzer@0.3.1418",
		"tamasfe.even-better-toml@0.19.0",
		"serayuzgur.crates@0.5.10",
		"vue.volar@1.2.0",
		"bradlc.vscode-tailwindcss@0.9.7"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "cargo install --locked ripgrep && cargo install --locked fd-find && cargo install --locked cargo-sort",

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "developer",
	"updateRemoteUserUID": true
}
