AWSTemplateFormatVersion: "2010-09-09"
# 本番、開発の両環境で同じ成果物格納場所を参照するので、このテンプレートはProd、Devと分けて作成しない。
# スタック名は"ArtifactsStore"とする。
Resources:
  # frontendの成果物の格納用S3バケット
  CcsUserAppCiResultStorage:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: "ccs-user-app-ci-result-storage"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
            BucketKeyEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  CcsAdminAppCiResultStorage:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: "ccs-admin-app-ci-result-storage"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
            BucketKeyEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  # backendの成果物の格納用のECR
  CcsUserServiceRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-user-service"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsAdminServiceRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-admin-service"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsAdminAccountRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-admin-account"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsDbInitializerRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-db-initializer"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsMigrationToolRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-migration-tool"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsIndexInitializerRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-index-initializer"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsDeleteExpiredTempAccountsRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-delete-expired-temp-accounts"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsDeleteExpiredPwdChangeReqsRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-delete-expired-pwd-change-reqs"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsDeleteExpiredTempMfaSecretsRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-delete-expired-temp-mfa-secrets"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsDeleteExpiredConsultationReqsRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-delete-expired-consultation-reqs"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
  CcsDeleteExpiredDeletedUserAccountsRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "ccs-delete-expired-deleted-user-accounts"
      EncryptionConfiguration:
        EncryptionType: "AES256"
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: "IMMUTABLE"
Outputs:
  UserServiceRepositoryUri:
    Value: !GetAtt CcsUserServiceRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-UserServiceRepositoryUri"
  AdminServiceRepositoryUri:
    Value: !GetAtt CcsAdminServiceRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-AdminServiceRepositoryUri"
  AdminAccountRepositoryUri:
    Value: !GetAtt CcsAdminAccountRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-AdminAccountRepositoryUri"
  DbInitializerRepositoryUri:
    Value: !GetAtt CcsDbInitializerRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-DbInitializerRepositoryUri"
  MigrationToolRepositoryUri:
    Value: !GetAtt CcsMigrationToolRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-MigrationToolRepositoryUri"
  IndexInitializerRepositoryUri:
    Value: !GetAtt CcsIndexInitializerRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-IndexInitializerRepositoryUri"
  DeleteExpiredTempAccountsRepositoryUri:
    Value: !GetAtt CcsDeleteExpiredTempAccountsRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-DeleteExpiredTempAccountsRepositoryUri"
  DeleteExpiredPwdChangeReqsRepositoryUri:
    Value: !GetAtt CcsDeleteExpiredPwdChangeReqsRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-DeleteExpiredPwdChangeReqsRepositoryUri"
  DeleteExpiredTempMfaSecretsRepositoryUri:
    Value: !GetAtt CcsDeleteExpiredTempMfaSecretsRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-DeleteExpiredTempMfaSecretsRepositoryUri"
  DeleteExpiredConsultationReqsRepositoryUri:
    Value: !GetAtt CcsDeleteExpiredConsultationReqsRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-DeleteExpiredConsultationReqsRepositoryUri"
  DeleteExpiredDeletedUserAccountsRepositoryUri:
    Value: !GetAtt CcsDeleteExpiredDeletedUserAccountsRepository.RepositoryUri
    Export:
      Name: ArtifactsStore-DeleteExpiredDeletedUserAccountsRepositoryUri"
