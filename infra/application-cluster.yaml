AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  # prodの場合はスタック名に"ProdApplicationCluster"、devの場合はスタック名に"DevApplicationCluster"を指定する
  Environment:
    Type: String
    AllowedValues:
      - prod
      - dev
Conditions:
  IsProd: !Equals [!Ref Environment, "prod"]
Resources:
  CcsApplicationCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-application-cluster"]]
      CapacityProviders:
        - "FARGATE"
        - "FARGATE_SPOT" # 料金節約のために利用を許可する。ユーザービリティに明確に悪影響があると判断した際には削除する。
      ClusterSettings:
        - Name: "containerInsights" # 料金が高いためcontainerInsightsは無効化。コンテナの状況は基本モニタリングのメトリクス、詳細モニタリングのメトリクスでチェックする。
          Value: "disabled"
      Configuration:
        ExecuteCommandConfiguration:
          Logging: "DEFAULT"
  CcsTaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-task-execution-role"]]
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - !Ref CcsTaskExecutionPolicy
  CcsTaskExecutionPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Join ["", [!If [IsProd, "Prod", "Dev"], "CcsTaskExecutionPolicy"]]
      PolicyDocument: |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "ecr:GetAuthorizationToken",
                        "ecr:BatchCheckLayerAvailability",
                        "ecr:GetDownloadUrlForLayer",
                        "ecr:BatchGetImage",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents",
                        "logs:CreateLogGroup",
                        "ssm:GetParameters"
                    ],
                    "Resource": "*"
                }
            ]
        }
  CcsTaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-task-role"]]
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - !Ref CcsIdentityImagesAccessPolicy
        - !Ref CcsCareersImagesAccessPolicy
        - !Ref CcsSendMailAccessPolicy
    CcsIdentityImagesAccessPolicy:
      Type: "AWS::IAM::ManagedPolicy"
      Properties:
        ManagedPolicyName: !Join ["", [!If [IsProd, "Prod", "Dev"], "CcsIdentityImagesAccessPolicy"]]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "ListObjectsInBucket"
              Effect: "Allow"
              Action:
                - "s3:ListBucket"
              Resource:
                - !Sub
                  - "arn:aws:s3:::${CCS_IDENTITY_IMAGES}"
                  - CCS_IDENTITY_IMAGES: !Join ["-", [!If [IsProd, "ProdDataStore", "DevDataStore"], "IdentityImagesBucketName"]]
            - Sid: "AllObjectActions"
              Effect: "Allow"
              Action: "s3:*Object"
              Resource:
                - !Sub
                  - "arn:aws:s3:::${CCS_IDENTITY_IMAGES}/*"
                  - CCS_IDENTITY_IMAGES: !Join ["-", [!If [IsProd, "ProdDataStore", "DevDataStore"], "IdentityImagesBucketName"]]
    CcsCareersImagesAccessPolicy:
      Type: "AWS::IAM::ManagedPolicy"
      Properties:
        ManagedPolicyName: !Join ["", [!If [IsProd, "Prod", "Dev"], "CcsCareersImagesAccessPolicy"]]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "ListObjectsInBucket"
              Effect: "Allow"
              Action:
                - "s3:ListBucket"
              Resource:
                - !Sub
                  - "arn:aws:s3:::${CCS_CAREER_IMAGES}"
                  - CCS_CAREER_IMAGES: !Join ["-", [!If [IsProd, "ProdDataStore", "DevDataStore"], "CareerImagesBucketName"]]
            - Sid: "AllObjectActions"
              Effect: "Allow"
              Action: "s3:*Object"
              Resource:
                - !Sub
                  - "arn:aws:s3:::${CCS_CAREER_IMAGES}/*"
                  - CCS_CAREER_IMAGES: !Join ["-", [!If [IsProd, "ProdDataStore", "DevDataStore"], "CareerImagesBucketName"]]
    CcsSendMailAccessPolicy:
      Type: "AWS::IAM::ManagedPolicy"
      Properties:
        ManagedPolicyName: !Join ["", [!If [IsProd, "Prod", "Dev"], "CcsSendMailAccessPolicy"]]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "SendMailStatement"
              Effect: "Allow"
              Action:
                - "ses:SendEmail"
                - "ses:SendRawEmail"
              Resource: !Sub "arn:aws:ses:*:${AWS::AccountId}:identity/*"
Outputs:
  ApplicationCluster:
    Value: !GetAtt CcsApplicationCluster.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ApplicationCluster"
