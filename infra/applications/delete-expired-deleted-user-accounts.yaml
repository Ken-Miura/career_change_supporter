AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required parameters
        Parameters:
          - Environment
          - ImageTag
          - AdminEmailAddress
          - InstanceCount
      - Label:
          default: Parameter basically using default value
        Parameters:
          - SystemEmailAddress
Parameters:
  # prodの場合はスタック名に"ProdDeleteExpiredDeletedUserAccounts"、devの場合はスタック名に"DevDeleteExpiredDeletedUserAccounts"を指定する
  Environment:
    Type: String
    AllowedValues:
      - prod
      - dev
  ImageTag:
    Type: String
    Description: Enter ECR image tag for delete expired deleted user accounts
    AllowedPattern: ^[a-f0-9]{40}$
  AdminEmailAddress:
    Type: String
    Description: Enter email address to receive notification when error happens
  SystemEmailAddress:
    Type: String
    Default: no-reply@career-change-supporter.com
  InstanceCount:
    Type: Number
    Description: Enter the number of the instances. If you want to stop the scheduled task, set 0 to this value.
    MinValue: 0
Conditions:
  IsProd: !Equals [!Ref Environment, "prod"]
Resources:
  CcsDeleteExpiredDeletedUserAccounts:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-delete-expired-deleted-user-accounts-scheduled-task"]]
      RoleArn:
        Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdApplicationCluster", "DevApplicationCluster"], "TaskExecutionRole"]]
      ScheduleExpression: "cron(0 19 * * ? *)"
      State: "ENABLED"
      Targets:
        - Id: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-delete-expired-deleted-user-accounts-scheduled-task"]]
          Arn: !GetAtt
            - Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdApplicationCluster", "DevApplicationCluster"], "ApplicationCluster"]]
            - Arn
          RoleArn:
            Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdApplicationCluster", "DevApplicationCluster"], "TaskExecutionRole"]]
          EcsParameters:
            TaskDefinitionArn: !Ref CcsDeleteExpiredDeletedUserAccountsTask
            CapacityProviderStrategy:
              - CapacityProvider: !If [IsProd, "FARGATE", "FARGATE_SPOT"]
                Weight: 1
                Base: 0
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: "ENABLED"
                SecurityGroups:
                  - Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdNetwork", "DevNetwork"], "ToolSecurityGroupId"]]
                Subnets:
                  - Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdNetwork", "DevNetwork"], "PublicSubnet1Id"]]
                  - Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdNetwork", "DevNetwork"], "PublicSubnet2Id"]]
            PlatformVersion: "1.4.0"
            TaskCount: !Ref InstanceCount
  CcsDeleteExpiredDeletedUserAccountsTask:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-delete-expired-deleted-user-accounts-task"]]
      Cpu: "1024"
      Memory: "2048"
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn:
        Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdApplicationCluster", "DevApplicationCluster"], "TaskExecutionRole"]]
      TaskRoleArn:
        Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdApplicationCluster", "DevApplicationCluster"], "TaskRole"]]
      ContainerDefinitions:
        - Name: !Join ["-", [!If [IsProd, "prod", "dev"], "ccs-delete-expired-deleted-user-accounts"]]
          Essential: true
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/ccs-delete-expired-deleted-user-accounts:${ImageTag}" # NOTE: image用のリポジトリは事前に作成済みであることを前提とする
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-create-group: "true"
              awslogs-group: !Sub
                - "/ecs/${ENV}-ccs-delete-expired-deleted-user-accounts"
                - ENV: !If [IsProd, "prod", "dev"]
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"
          Environment:
            - Name: "DB_HOST"
              Value:
                Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdDataStore", "DevDataStore"], "DbHost"]]
            - Name: "DB_PORT"
              Value:
                Fn::ImportValue: !Join ["-", [!If [IsProd, "ProdDataStore", "DevDataStore"], "DbPort"]]
            - Name: "DB_NAME"
              Value: "ccs_db"
            - Name: "DB_ADMIN_NAME"
              Value: "admin_app"
            - Name: "ADMIN_EMAIL_ADDRESS"
              Value: !Ref AdminEmailAddress
            - Name: "SYSTEM_EMAIL_ADDRESS"
              Value: !Ref SystemEmailAddress
            - Name: "AWS_SES_REGION"
              Value: "us-east-1"
            - Name: "AWS_SES_ENDPOINT_URI"
              Value: "https://email.us-east-1.amazonaws.com"
            - Name: "USE_ECS_TASK_ROLE"
              Value: "true"
          Secrets:
            - Name: "DB_ADMIN_PASSWORD"
              ValueFrom: !Join ["-", [!If [IsProd, "prod", "dev"], "db-admin-app-password"]]
